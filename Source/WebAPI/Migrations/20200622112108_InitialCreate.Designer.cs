// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI.Model.Database;

namespace WebAPI.Migrations
{
    [DbContext(typeof(CustomDbContext))]
    [Migration("20200622112108_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebAPI.Model.Database.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(30, 5)");

                    b.Property<string>("PriceCurrency")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e6f6ddb0-02dd-4106-8716-e6ffa329c664"),
                            DisplayName = "Product1",
                            Price = 5.99m,
                            PriceCurrency = "Euro"
                        },
                        new
                        {
                            Id = new Guid("ce901d35-85d4-45a2-8e14-49bc360f70eb"),
                            DisplayName = "Product2",
                            Price = 15m,
                            PriceCurrency = "Euro"
                        },
                        new
                        {
                            Id = new Guid("ad45055b-f1b3-46aa-a4c2-8ba5a4d27236"),
                            DisplayName = "Product3",
                            Price = 100m,
                            PriceCurrency = "Euro"
                        });
                });

            modelBuilder.Entity("WebAPI.Model.Database.Request", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("IsCurrent")
                        .HasColumnType("int");

                    b.Property<Guid>("RefNo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RequestStatusId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RequestStatusId");

                    b.HasIndex("UserId");

                    b.ToTable("Request");
                });

            modelBuilder.Entity("WebAPI.Model.Database.RequestDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Qty")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("RequestId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("RequestId");

                    b.ToTable("RequestDetail");
                });

            modelBuilder.Entity("WebAPI.Model.Database.RequestStatus", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.ToTable("RequestStatus");

                    b.HasData(
                        new
                        {
                            Id = "Pending"
                        },
                        new
                        {
                            Id = "Approved"
                        },
                        new
                        {
                            Id = "Rejected"
                        });
                });

            modelBuilder.Entity("WebAPI.Model.Database.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = "User"
                        },
                        new
                        {
                            Id = "Coordinator"
                        },
                        new
                        {
                            Id = "Admin"
                        });
                });

            modelBuilder.Entity("WebAPI.Model.Database.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserStatusId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasName("user_unique_email")
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserStatusId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("WebAPI.Model.Database.UserStatus", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.ToTable("UserStatus");

                    b.HasData(
                        new
                        {
                            Id = "Pending"
                        },
                        new
                        {
                            Id = "Approved"
                        },
                        new
                        {
                            Id = "Rejected"
                        });
                });

            modelBuilder.Entity("WebAPI.Model.Database.Request", b =>
                {
                    b.HasOne("WebAPI.Model.Database.RequestStatus", "RequestStatus")
                        .WithMany("Requests")
                        .HasForeignKey("RequestStatusId");

                    b.HasOne("WebAPI.Model.Database.User", "User")
                        .WithMany("Request")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("WebAPI.Model.Database.RequestDetail", b =>
                {
                    b.HasOne("WebAPI.Model.Database.Product", "Product")
                        .WithMany("RequestDetails")
                        .HasForeignKey("ProductId");

                    b.HasOne("WebAPI.Model.Database.Request", "Request")
                        .WithMany("RequestDetails")
                        .HasForeignKey("RequestId");
                });

            modelBuilder.Entity("WebAPI.Model.Database.User", b =>
                {
                    b.HasOne("WebAPI.Model.Database.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");

                    b.HasOne("WebAPI.Model.Database.UserStatus", "UserStatus")
                        .WithMany("Users")
                        .HasForeignKey("UserStatusId");
                });
#pragma warning restore 612, 618
        }
    }
}
