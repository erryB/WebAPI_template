{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "environment": {
            "type": "string",
            "allowedValues": [
                "dev",
                "test",
                "staging",
                "production"
            ],
            "metadata": {
                "description": "Specifies which environment this deployment goes to."
            }
        },
        "tag": {
            "type": "string",
            "metadata": {
                "description": "A name that uniquely identifies this deployment."
            }
        },
        "webAppName": {
            "type": "string",
            "metadata": {
                "description": "Base name of the resource such as backend web app and app service plan."
            },
            "minLength": 2
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        }
    },
    "variables": {
        "resourceTags": {
            "environment": "[parameters('environment')]",
            "namespace": "[parameters('tag')]"
        },
        "appServiceSku": "P1V2",
        "databaseServerName": "[concat(parameters('tag'), 'sqlsvr')]",
        "databaseUsername": "localadmin",
        "databasePassword": "[concat(uniqueString(resourceGroup().id, parameters('tag')), '!P')]",
        "virtualNetworkName": "[concat(parameters('tag'), 'vnet')]",
        "appGatewaySubnetName": "[concat(parameters('tag'), 'appgwsubnet')]",
        "appGatewayName": "[concat(parameters('tag'), 'appgw')]",
        "publicIpName": "[concat(parameters('tag'), 'appgwpip')]",
        "appInsightsName": "[concat(parameters('tag'), 'appinsights')]",
        "managedIdentityName": "[concat(parameters('tag'), 'msi')]",
        "appServicePlanName": "[concat('AppServicePlan-', parameters('webAppName'))]",
        "backendWebAppName": "[concat(parameters('webAppName'), '-backend')]",
        "appGwIpConfigName": "appGatewayIpConfigName",
        "appGwFrontend443PortName": "placeholderPort_81",
        "appGwFrontend443Port": 81,
        "appGwFrontend80PortName": "appGatewayFrontendPort_80",
        "appGwFrontend80Port": 80,
        "appGwFrontendIpConfigName": "appGatewwayPublicFrontendIp",
        "appGwHttpSettingName": "appGatewayHttpSetting_443",
        "appGWBackendWebAppPool": "[concat(variables('backendWebAppName'), '-pool')]",
        "appGWUrlPathMapName": "appGatewayUrlPathMap",
        "appGw443ListenerName": "placeholderListener",
        "appGw80ListenerName": "appGateway80Listener",
        "appGwRoutingRuleName": "appGatewayRoutingRule",
        "httpsRedirectConfigName": "httpToHttpsRedirect",
        "pingTestBackendName": "403 Direct Access to Backend Web App Test",
        "pingTestSystemUpName": "200 Direct Access to App Gateway Root Test"
    },
    "resources": [
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "name": "[variables('managedIdentityName')]",
            "tags": "[variables('resourceTags')]",
            "apiVersion": "2018-11-30",
            "location": "[parameters('location')]"
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-04-01",
            "name": "[variables('virtualNetworkName')]",
            "tags": "[variables('resourceTags')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/20"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('appGatewaySubnetName')]",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24",
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.Web",
                                    "locations": [
                                        "*"
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2014-04-01",
            "name": "[variables('appInsightsName')]",
            "type": "Microsoft.Insights/components",
            "location": "[parameters('location')]",
            "tags": {
                "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('backendWebAppName'))]": "Resource",
                "displayName": "AppInsightsComponent"
            },
            "properties": {
                "applicationId": "[variables('appInsightsName')]"
            }
        },
        {
            "name": "[variables('pingTestBackendName')]",
            "type": "Microsoft.Insights/webtests",
            "apiVersion": "2015-05-01",
            "location": "[parameters('location')]",
            "tags": {
                "[concat('hidden-link:', resourceId('Microsoft.Insights/components', variables('appInsightsName')))]": "Resource"
            },
            "dependsOn": [
                "[concat('microsoft.insights/components/', variables('appInsightsName'))]"
            ],
            "properties": {
                "Name": "[variables('pingTestBackendName')]",
                "Enabled": true,
                "Frequency": 900,
                "Timeout": 120,
                "Kind": "ping",
                "RetryEnabled": true,
                "Locations": [
                    {
                    "Id": "us-ca-sjc-azr"
                    },
                    {
                    "Id": "us-tx-sn1-azr"
                    },
                    {
                    "Id": "us-il-ch1-azr"
                    },
                    {
                    "Id": "us-va-ash-azr"
                    },
                    {
                    "Id": "us-fl-mia-edge"
                    }
                ],
                "Configuration": {
                    "WebTest": "[concat('<WebTest   Name=\"', variables('pingTestBackendName'), '\"   Enabled=\"True\"         CssProjectStructure=\"\"    CssIteration=\"\"  Timeout=\"120\"  WorkItemIds=\"\"         xmlns=\"http://microsoft.com/schemas/VisualStudio/TeamTest/2010\"         Description=\"\"  CredentialUserName=\"\"  CredentialPassword=\"\"         PreAuthenticate=\"True\"  Proxy=\"default\"  StopOnError=\"False\"         RecordedResultFile=\"\"  ResultsLocale=\"\">  <Items>  <Request Method=\"GET\"    Version=\"1.1\"  Url=\"https://', variables('backendWebAppName'),   '.azurewebsites.net\" ThinkTime=\"0\"  Timeout=\"300\" ParseDependentRequests=\"False\"         FollowRedirects=\"True\" RecordResult=\"True\" Cache=\"False\"         ResponseTimeGoal=\"0\"  Encoding=\"utf-8\"  ExpectedHttpStatusCode=\"403\"         ExpectedResponseUrl=\"\" ReportingName=\"\" IgnoreHttpStatusCode=\"False\" />        </Items>        </WebTest>')]"
                },
                "SyntheticMonitorId": "[variables('pingTestBackendName')]"
            }
        },
        {
            "name": "[concat(variables('pingTestBackendName'), '-alertrule')]",
            "type": "Microsoft.Insights/metricAlerts",
            "apiVersion": "2018-03-01",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Insights/webtests', variables('pingTestBackendName'))]",
                "[concat('microsoft.insights/components/', variables('appInsightsName'))]"
            ],
            "tags": {
                "[concat('hidden-link:', resourceId('Microsoft.Insights/components', variables('appInsightsName')))]": "Resource",
                "[concat('hidden-link:', resourceId('Microsoft.Insights/webtests', variables('pingTestBackendName')))]": "Resource"
            },
            "properties": {
                "description": "[concat('Alert for ', variables('pingTestBackendName'))]",
                "severity": 1,
                "enabled": true,
                "scopes": [
                    "[resourceId('Microsoft.Insights/webtests',variables('pingTestBackendName'))]",
                    "[resourceId('Microsoft.Insights/components',variables('appInsightsName'))]"
                ],
                "evaluationFrequency": "PT1M",
                "windowSize": "PT5M",
                "templateType": 0,
                "criteria": {
                    "odata.type": "Microsoft.Azure.Monitor.WebtestLocationAvailabilityCriteria",
                    "webTestId": "[resourceId('Microsoft.Insights/webtests', variables('pingTestBackendName'))]",
                    "componentId": "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]",
                    "failedLocationCount": 2
                }
            }
        },       
        {
            "name": "[variables('pingTestSystemUpName')]",
            "type": "Microsoft.Insights/webtests",
            "apiVersion": "2015-05-01",
            "location": "[parameters('location')]",
            "tags": {
                "[concat('hidden-link:', resourceId('Microsoft.Insights/components', variables('appInsightsName')))]": "Resource"
            },
            "dependsOn": [
                "[concat('microsoft.insights/components/', variables('appInsightsName'))]"
            ],
            "properties": {
                "Name": "[variables('pingTestSystemUpName')]",
                "Enabled": true,
                "Frequency": 900,
                "Timeout": 120,
                "Kind": "ping",
                "RetryEnabled": true,
                "Locations": [
                    {
                    "Id": "us-ca-sjc-azr"
                    },
                    {
                    "Id": "us-tx-sn1-azr"
                    },
                    {
                    "Id": "us-il-ch1-azr"
                    },
                    {
                    "Id": "us-va-ash-azr"
                    },
                    {
                    "Id": "us-fl-mia-edge"
                    }
                ],
                "Configuration": {
                    "WebTest": "[concat('<WebTest   Name=\"', variables('pingTestSystemUpName'), '\"   Enabled=\"True\"         CssProjectStructure=\"\"    CssIteration=\"\"  Timeout=\"120\"  WorkItemIds=\"\"         xmlns=\"http://microsoft.com/schemas/VisualStudio/TeamTest/2010\"         Description=\"\"  CredentialUserName=\"\"  CredentialPassword=\"\"         PreAuthenticate=\"True\"  Proxy=\"default\"  StopOnError=\"False\"         RecordedResultFile=\"\"  ResultsLocale=\"\">  <Items>  <Request Method=\"GET\"    Version=\"1.1\"  Url=\"https://', parameters('webAppName'), '.', parameters('location'),   '.cloudapp.azure.com\" ThinkTime=\"0\"  Timeout=\"300\" ParseDependentRequests=\"False\"         FollowRedirects=\"True\" RecordResult=\"True\" Cache=\"False\"         ResponseTimeGoal=\"0\"  Encoding=\"utf-8\"  ExpectedHttpStatusCode=\"200\"         ExpectedResponseUrl=\"\" ReportingName=\"\" IgnoreHttpStatusCode=\"False\" />        </Items>        </WebTest>')]"
                },
                "SyntheticMonitorId": "[variables('pingTestSystemUpName')]"
            }
        },
        {
            "name": "[concat(variables('pingTestSystemUpName'), '-alertrule')]",
            "type": "Microsoft.Insights/metricAlerts",
            "apiVersion": "2018-03-01",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Insights/webtests', variables('pingTestSystemUpName'))]",
                "[concat('microsoft.insights/components/', variables('appInsightsName'))]"
            ],
            "tags": {
                "[concat('hidden-link:', resourceId('Microsoft.Insights/components', variables('appInsightsName')))]": "Resource",
                "[concat('hidden-link:', resourceId('Microsoft.Insights/webtests', variables('pingTestSystemUpName')))]": "Resource"
            },
            "properties": {
                "description": "[concat('Alert for ', variables('pingTestSystemUpName'))]",
                "severity": 1,
                "enabled": true,
                "scopes": [
                    "[resourceId('Microsoft.Insights/webtests',variables('pingTestSystemUpName'))]",
                    "[resourceId('Microsoft.Insights/components',variables('appInsightsName'))]"
                ],
                "evaluationFrequency": "PT1M",
                "windowSize": "PT5M",
                "templateType": 0,
                "criteria": {
                    "odata.type": "Microsoft.Azure.Monitor.WebtestLocationAvailabilityCriteria",
                    "webTestId": "[resourceId('Microsoft.Insights/webtests', variables('pingTestSystemUpName'))]",
                    "componentId": "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]",
                    "failedLocationCount": 2
                }
            }
        },
        {
            "apiVersion": "2018-02-01",
            "type": "Microsoft.Web/serverfarms",
            "kind": "linux",
            "name": "[variables('appServicePlanName')]",
            "tags": "[variables('resourceTags')]",
            "location": "[parameters('location')]",
            "properties": {
                "reserved": true
            },
            "dependsOn": [
            ],
            "sku": {
                "name": "[variables('appServiceSku')]"
            }
        },
        {
            "apiVersion": "2018-11-01",
            "type": "Microsoft.Web/sites",
            "kind": "app",
            "name": "[variables('backendWebAppName')]",
            "tags": "[variables('resourceTags')]",
            "location": "[parameters('location')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "resources": [
                {
                    "apiVersion": "2018-11-01",
                    "name": "appsettings",
                    "type": "config",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', variables('backendWebAppName'))]"
                    ],
                    "properties": {
                        "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(concat('microsoft.insights/components/', variables('appInsightsName'))).InstrumentationKey]",
                        "ManagedIdentity__TenantId": "[subscription().tenantId]",
                        "ManagedIdentity__ConnectionOption": "RunAs=App;"
                    }
                }
            ],
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "siteConfig": {
                    "http20Enabled": false,
                    "minTlsVersion": "1.2",
                    "linuxFxVersion": "[concat('DOTNETCORE|3.1')]",
                    "ipSecurityRestrictions": [
                        {
                            "vnetSubnetResourceId": "[resourceId('Microsoft.Network/virtualNetworks/subnets/', variables('virtualNetworkName'), variables('appGatewaySubnetName'))]",
                            "action": "Allow",
                            "tag": "Default",
                            "priority": 200,
                            "name": "appGatewaySubnet",
                            "description": "Isolate traffic to subnet containing Azure Application Gateway"
                        }
                    ],
                    "connectionStrings": [
                        {
                            "name": "DefaultConnection",
                            "connectionString": "[concat('Server=tcp:', variables('databaseServerName'), '.database.windows.net,1433;Database=yourdb')]",
                            "type": "SQLAzure"
                        }
                    ]
                },
                "clientAffinityEnabled": false,
                "httpsOnly": true
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "[resourceId('microsoft.insights/components/', variables('appInsightsName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-02-01",
            "name": "[variables('publicIpName')]",
            "tags": "[variables('resourceTags')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static",
                "dnsSettings": {
                    "domainNameLabel": "[toLower(parameters('webAppName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/applicationGateways",
            "apiVersion": "2019-02-01",
            "name": "[variables('appGatewayName')]",
            "tags": "[variables('resourceTags')]",
            "location": "[parameters('location')]",
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))]": {
                    }
                }
            },
            "zones": [
                "1",
                "2"
            ],
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIpName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "sku": {
                    "name": "WAF_v2",
                    "tier": "WAF_v2"
                },
                "gatewayIPConfigurations": [
                    {
                        "name": "[variables('appGwIpConfigName')]",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets/', variables('virtualNetworkName'), variables('appGatewaySubnetName'))]"
                            }
                        }
                    }
                ],
                "sslCertificates": [
                ],
                "trustedRootCertificates": [
                ],
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('appGwFrontendIpConfigName')]",
                        "properties": {
                            "PublicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIpName'))]"
                            }
                        }
                    }
                ],
                "frontendPorts": [
                    {
                        "name": "[variables('appGwFrontend443PortName')]",
                        "properties": {
                            "Port": "[variables('appGwFrontend443Port')]"
                        }
                    },
                    {
                        "name": "[variables('appGwFrontend80PortName')]",
                        "properties": {
                            "Port": "[variables('appGwFrontend80Port')]"
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('appGwBackendWebAppPool')]",
                        "properties": {
                            "backendAddresses": [
                                {
                                    "fqdn": "[reference(variables('backendWebAppName')).hostNames[0]]"
                                }
                            ]
                        }
                    }

                ],
                "backendHttpSettingsCollection": [
                    {
                        "name": "[variables('appGwHttpSettingName')]",
                        "properties": {
                            "Port": 443,
                            "Protocol": "Https",
                            "cookieBasedAffinity": "Disabled",
                            "requestTimeout": 20,
                            "pickHostNameFromBackendAddress": true
                        }
                    }
                ],
                "httpListeners": [
                    {
                        "name": "[variables('appGw443ListenerName')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations/', variables('appGatewayName'), variables('appGwFrontendIpConfigName'))]"
                            },
                            "frontendPort": {
                                "id": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts/', variables('appGatewayName'), variables('appGwFrontend443PortName'))]"
                            },
                            "protocol": "Http"
                        }
                    },
                    {
                        "name": "[variables('appGw80ListenerName')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations/', variables('appGatewayName'), variables('appGwFrontendIpConfigName'))]"
                            },
                            "frontendPort": {
                                "id": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts/', variables('appGatewayName'), variables('appGwFrontend80PortName'))]"
                            },
                            "protocol": "Http"
                        }
                    }
                ],
                "urlPathMaps": [
                    {
                        "name": "[variables('appGWUrlPathMapName')]",
                        "properties": {
                            "defaultBackendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools/', variables('appGatewayName'), variables('appGwBackendWebAppPool'))]"
                            },
                            "defaultBackendHttpSettings": {
                                "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection/', variables('appGatewayName'), variables('appGwHttpSettingName'))]"
                            },
                            "defaultRewriteRuleSet": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('appGatewayName')), '/rewriteRuleSets/static_headers')]"
                            },
                            "pathRules": [
                                {
                                    "name": "[concat(variables('appGWUrlPathMapName'), '-api')]",
                                    "properties": {
                                        "paths": [
                                            "/api/*"
                                        ],
                                        "backendAddressPool": {
                                            "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools/', variables('appGatewayName'), variables('appGwBackendWebAppPool'))]"
                                        },
                                        "backendHttpsettings": {
                                            "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection/', variables('appGatewayName'), variables('appGwHttpSettingName'))]"
                                        },
                                        "rewriteRuleSet": {
                                            "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('appGatewayName')), '/rewriteRuleSets/static_headers')]"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "requestRoutingRules": [
                    {
                        "Name": "[variables('appGwRoutingRuleName')]",
                        "properties": {
                            "RuleType": "PathBasedRouting",
                            "httpListener": {
                                "id": "[resourceId('Microsoft.Network/applicationGateways/httpListeners/', variables('appGatewayName'), variables('appGw443ListenerName'))]"
                            },                            
                            "urlPathMap": {
                                "id": "[resourceId('Microsoft.Network/applicationGateways/urlPathMaps/', variables('appGatewayName'), variables('appGWUrlPathMapName'))]"
                            }
                        }
                    },
                    {
                        "name": "httpToHttpsRedirect",
                        "properties": {
                            "ruleType": "Basic",
                            "httpListener": {
                                "id": "[resourceId('Microsoft.Network/applicationGateways/httpListeners/', variables('appGatewayName'), variables('appGw80ListenerName'))]"
                            },
                            "redirectConfiguration": {
                                "id": "[resourceId('Microsoft.Network/applicationGateways/redirectConfigurations/', variables('appGatewayName'), variables('httpsRedirectConfigName'))]"
                            }
                        }
                    }
                ],
                "rewriteRuleSets": [
                    {
                        "name": "static_headers",
                        "properties": {
                            "rewriteRules": [
                                {
                                    "ruleSequence": 100,
                                    "conditions": [],
                                    "name": "httpstaticheaders",
                                    "actionSet": {
                                        "requestHeaderConfigurations": [],
                                        "responseHeaderConfigurations": [
                                            {
                                                "headerName": "X-XSS-Protection",
                                                "headerValue": "1; mode=block"
                                            },
                                            {
                                                "headerName": "X-Content-Type-Options",
                                                "headerValue": "nosniff"
                                            },
                                            {
                                                "headerName": "X-Frame-Options",
                                                "headerValue": "sameorigin"
                                            },
                                            {
                                                "headerName": "Cache-Control",
                                                "headerValue": "no-cache"
                                            },
                                            {
                                                "headerName": "X-Powered-By"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ],
                "redirectConfigurations": [
                    {
                        "name": "[variables('httpsRedirectConfigName')]",
                        "properties": {
                            "redirectType": "Permanent",
                            "targetListener": {
                                "id": "[resourceId('Microsoft.Network/applicationGateways/httpListeners/', variables('appGatewayName'), variables('appGw443ListenerName'))]"
                            },
                            "includePath": true,
                            "includeQueryString": true,
                            "requestRoutingRules": [
                                {
                                    "id": "[resourceId('Microsoft.Network/applicationGateways/requestRoutingRules/', variables('appGatewayName'), variables('httpsRedirectConfigName'))]"
                                }
                            ]
                        }
                    }
                ],
                "enableHttp2": false,
                "autoscaleConfiguration": {
                    "minCapacity": 2,
                    "maxCapacity": 5
                },
                "webApplicationFirewallConfiguration": {
                    "enabled": true,
                    "firewallMode": "Prevention",
                    "ruleSetType": "OWASP",
                    "ruleSetVersion": "3.0",
                    "disabledRuleGroups": [
                        {
                            "ruleGroupName": "REQUEST-942-APPLICATION-ATTACK-SQLI",
                            "rules": [
                                942130,
                                942440
                            ]
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Sql/servers",
            "name": "[variables('databaseServerName')]",
            "tags": "[variables('resourceTags')]",
            "apiVersion": "2014-04-01",
            "location": "[parameters('location')]",
            "properties": {
                "administratorLogin": "[variables('databaseUsername')]",
                "administratorLoginPassword": "[variables('databasePassword')]",
                "version": "12.0"
            }
        }
    ]
}